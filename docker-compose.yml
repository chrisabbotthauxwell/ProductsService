version: '3.8'

services:
  #################################
  # Products Service + Dapr sidecar
  #################################
  productsservice:
    build:
      context: ./ProductsService
      dockerfile: Dockerfile
    container_name: productsservice
    ports:
      - "8080:8080"  # productsservice's exposed port
    networks:
      - dapr-net

  dapr-products:
    image: "daprio/daprd:latest"
    container_name: dapr-products
    depends_on:
      - productsservice
      - redis
    restart: on-failure
    command: [
      "/daprd",
      "-app-id", "productsservice",
      "-app-port", "8080",
      "-dapr-http-port", "3500",
      "-dapr-grpc-port", "50001",
      "-components-path", "/components/local"
    ]
    volumes:
      - ./components/local:/components/local
    network_mode: "service:productsservice"

  #################################
  # Orders Service + Dapr sidecar
  #################################
  ordersservice:
    build:
      context: ./OrdersService
      dockerfile: Dockerfile
    container_name: ordersservice
    ports:
      - "8081:8081"  # ordersservice's exposed port
    networks:
      - dapr-net

  dapr-orders:
    image: "daprio/daprd:latest"
    container_name: dapr-orders
    depends_on:
      - ordersservice
      - redis
    restart: on-failure
    command: [
      "/daprd",
      "-app-id", "ordersservice",
      "-app-port", "8081",
      "-dapr-http-port", "3600",
      "-dapr-grpc-port", "51001",
      "-components-path", "/components/local"
    ]
    volumes:
      - ./components/local:/components/local
    network_mode: "service:ordersservice"

  ######################################################
  # Redis Service (for local pub/sub over Redis Streams)
  ######################################################
  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - dapr-net

networks:
  dapr-net: